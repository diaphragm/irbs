# Irbs 0.1.0

module ::Submodule
end

module ::Example
end

class ::Example::App
  type key = String | Symbol
  extend ::Submodule
  include ::Submodule

  public attr_reader xxx: Integer
  public attr_accessor yyy: String
  private attr_writer zzz: Array[untyped]
  public def initialize: (Integer, String) -> void
  public def foo: () -> bool
  public def self.classmethod: () -> void
  private def bar: [T] (T) -> T
end

module ::Example::App::Hoge
  public def self.hoge: (Integer) -> String
  public def self.fuga: () -> bool
end

